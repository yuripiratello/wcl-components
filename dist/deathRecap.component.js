let getComponent;(()=>{"use strict";var e={d:(t,i)=>{for(var a in i)e.o(i,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:i[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>u});const i=[48743,49039,48792,51052,48707,49998,196718,196555,198589,319454,108238,124974,22812,22842,5487,61336,374227,363916,374348,360827,186265,109304,264735,388035,414658,45438,55342,110960,414660,342245,342247,235450,235313,235219,11426,115203,122783,122470,471195,1022,642,6940,498,403876,184662,108968,15286,19236,586,47585,5277,31224,185311,1966,198103,108271,108281,108270,104773,108416,452930,6789,234153,383762,97462,202168,23920,386208,118038,190456,184364,6262,431416],a=[8936,116670,85673,2061,974,8004],n=["Frost Death Knight","Unholy Death Knight","Havoc Demon Hunter","Balance Druid","Feral Druid","Devastation Evoker","Augmentation Evoker","Beast Mastery Hunter","Marksmanship Hunter","Survival Hunter","Arcane Mage","Fire Mage","Frost Mage","Windwalker Monk","Retribution Paladin","Shadow Priest","Assassination Rogue","Outlaw Rogue","Subtlety Rogue","Elemental Shaman","Enhancement Shaman","Affliction Warlock","Demonology Warlock","Destruction Warlock","Arms Warrior","Fury Warrior"],r=[115203,2061,264735,184364,55342,124974,48707,586,374348,22630,48743,122470,196718,6262,633,34428,642,6789,48792,471195,5277,386208,11426,234153,85673,97462,108238,235219,342245,342247,8936,108270,108271,109304,108281,383762,118038,22812,6940,19236,272679,235313,431416,22842,452930,8004,104773,49998,370511,184662,18265,51052,5487,110959,23920,110960,360827,45438,108416,363916,49039,61336,186265,122783,403876,122278,31224,108968,1966,15286,202168,235450,198589,116670,414658,388035,414660,196555,974,374227,198103,319454,185311,47585,498,190456,1022],l=[115203],o=(e,t,i)=>{if(null===e)return"Unknown (Fall)";const a=i?` [${s(t,i.timestamp)}]`:"";return`<AbilityIcon id="${e.id}" icon="${e.icon}" type="${e.type}">${e.name}${a}</AbilityIcon>`},s=(e,t)=>{const i=t-e;return`${Math.floor(i/6e4)}:${(i%6e4/1e3).toFixed(0)}:${i%1e3}`},d=(e,t,s)=>{var d;const u=`${s} ${null===(d=t.target)||void 0===d?void 0:d.subType}`;return e.eventsByCategoryAndDisposition("casts","friendly").filter((e=>{var i;return null!=e.source&&(null===(i=t.target)||void 0===i?void 0:i.id)===e.source.id})).map((e=>{return a=t,null==(i=e).ability?null:r.includes(i.ability.id)&&Math.abs(i.timestamp-a.timestamp)<1e4||l.includes(i.ability.id)&&Math.abs(i.timestamp-a.timestamp)<16e3?{ability:i.ability,event:i}:null;var i,a})).filter((e=>null!==e)).filter((e=>!!e&&(!!n.includes(u)&&(i.includes(e.ability.id)||a.includes(e.ability.id))))).reduce(((t,i)=>(null!==i&&t.push(o(i.ability,e.startTime,i.event)),t)),[])},u=getComponent=()=>({component:"Table",props:{columns:{title:{header:"Death Recap",textAlign:"center",colSpan:5,columns:{fightId:{header:"Fight ID"},player:{header:"Player"},ability:{header:"Ability"},timestamp:{header:"Timestamp",textAlign:"right"},defensiveCasts:{header:"Defensive Casts"}}}},data:reportGroup.fights.flatMap((e=>{const t=e.friendlyPlayerDeathEvents.slice(0,3);return{fight:e,deaths:t}})).reduce(((e,t)=>{const i=t.deaths.reduce(((e,i)=>{var a;if(!i.target)return e;const n=t.fight.specForPlayer(i.target),r=d(t.fight,i,n),l=t.fight.startTime,u=s(l,i.timestamp);var c,h;return e.push({fightId:t.fight.id,player:i.target?(c=i.target,h=n,`<ActorIcon type="${c.subType}-${h}">${c.name}</ActorIcon>`):"Unknown",ability:o(i.killingAbility,l),timestamp:u,defensiveCasts:null!==(a=r.join(","))&&void 0!==a?a:'<Wipe><Icon type="close"></Wipe>'}),e}),[]);return e.push({fightId:t.fight.id,deaths:i}),e}),[]).flatMap((e=>[{fightId:e.fightId,player:e.fightId,ability:e.fightId,timestamp:e.fightId,defensiveCasts:e.fightId},...e.deaths]))}});globalThis.getComponent=t.default})();